<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--引入默认的一些设置-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />

    <logger name="org.springframework.web" level="info"/>
    <logger name="com.ibatis" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <logger name="cn.v5cn.springboot" level="DEBUG"/>

    <!-- 文件输出格式 -->
    <property name="PATTERN" value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %msg%n" />
    <!-- dev文件路径 -->
    <property name="DEV_FILE_PATH" value="/mnt/springboot-cache-jetcache/logs" />
    <!-- test文件路径 -->
    <property name="TEST_FILE_PATH" value="/mnt/springboot-cache-jetcache/logs" />
    <!-- pro文件路径 -->
    <property name="PRO_FILE_PATH" value="/mnt/springboot-cache-jetcache/logs" />

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>


    <!-- 开发环境 -->
    <springProfile name="local">
        <root level="info">
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>

    <!-- 线上开发环境 -->
    <springProfile name="dev">
        <appender name="DEV-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${DEV_FILE_PATH}/logback_%d{yyyy-MM-dd}.log</fileNamePattern>
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
        </appender>
        <root level="info">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="DEV-FILE" />
        </root>
    </springProfile>

    <!-- 测试环境 -->
    <springProfile name="test">
        <appender name="TEST-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${TEST_FILE_PATH}/logback_%d{yyyy-MM-dd}.log</fileNamePattern>
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
        </appender>
        <root level="info">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="TEST-FILE" />
        </root>
    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="pro">
        <appender name="PROD-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${PRO_FILE_PATH}/fileserver.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${PRO_FILE_PATH}/logback_%d{yyyy-MM-dd}.log.zip</fileNamePattern>
                <MaxHistory>30</MaxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
        </appender>
        <!--异步到文件-->
        <appender name="PROD-ASYNC-FILE" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <queueSize>500</queueSize>
            <appender-ref ref="PROD-FILE"/>
        </appender>
        <root level="info">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="PROD-ASYNC-FILE" />
        </root>
    </springProfile>
</configuration>